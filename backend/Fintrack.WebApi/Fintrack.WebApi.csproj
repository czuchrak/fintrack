<Project Sdk="Microsoft.NET.Sdk.Web">
    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>..\..\frontend\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)**</DefaultItemExcludes>
        <RootNamespace>Fintrack</RootNamespace>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
        <UserSecretsId>f2a83bff-4290-4650-8877-745ec759192c</UserSecretsId>
    </PropertyGroup>
    <ItemGroup>
        <PackageReference Include="FluentValidation" Version="11.2.2" />
        <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="11.2.2" />
        <PackageReference Include="MediatR" Version="11.0.0" />
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="11.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.10" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.10">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Serilog.Extensions.Hosting" Version="5.0.1" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.10" />
        <PackageReference Include="Serilog.AspNetCore" Version="6.0.1" />
        <PackageReference Include="Serilog" Version="2.12.0" />
        <PackageReference Include="Serilog.Sinks.MSSqlServer" Version="6.0.0" />
        <PackageReference Include="Serilog.Settings.Configuration" Version="3.4.0" />
        <PackageReference Include="MailKit" Version="3.4.2" />
        <PackageReference Include="Quartz.AspNetCore" Version="3.5.0" />
        <PackageReference Include="Quartz.Extensions.Hosting" Version="3.5.0" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    </ItemGroup>
    <ItemGroup>
        <Content Remove="$(SpaRoot)**" />
        <Content Update="appsettings.Development.json">
            <DependentUpon>appsettings.json</DependentUpon>
        </Content>
        <Content Update="appsettings.Production.json">
            <DependentUpon>appsettings.json</DependentUpon>
        </Content>
        <Content Update="appsettings.Test.json">
            <DependentUpon>appsettings.json</DependentUpon>
        </Content>
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Fintrack.App\Fintrack.App.csproj" />
        <ProjectReference Include="..\Fintrack.Database\Fintrack.Database.csproj" />
    </ItemGroup>
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    </Target>
    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:test" Condition=" '$(EnvironmentName)'=='Test' " />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:production" Condition=" '$(EnvironmentName)'=='Production' " />
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)ClientApp\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>ClientApp\%(RecursiveDir)%(Filename)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
    <Choose>
        <When Condition=" '$(EnvironmentName)'=='Test' ">
            <ItemGroup>
                <Content Remove="appsettings.Development.json" />
                <Content Remove="appsettings.Production.json" />
            </ItemGroup>
        </When>
        <When Condition=" '$(EnvironmentName)'=='Production' ">
            <ItemGroup>
                <Content Remove="appsettings.Development.json" />
                <Content Remove="appsettings.Test.json" />
            </ItemGroup>
        </When>
    </Choose>
</Project>